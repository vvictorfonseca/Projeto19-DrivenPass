// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  createdAt DateTime? @default(now()) @db.Timestamptz()
  
  credentials credentials[]
  notes notes[]
  cards cards[]
  wifi wifi[]
}

model credentials {
  id Int @id @default(autoincrement())
  userId Int
  tittle String
  url String
  userName String
  password String
  users users @relation(fields: [userId], references: [id])
  createdAt DateTime? @default(now()) @db.Timestamptz()

  @@unique([userId, tittle])
}

model notes {
  id Int @id @default(autoincrement())
  userId Int
  tittle String
  note String
  users users @relation(fields: [userId], references: [id])
  createdAt DateTime? @default(now()) @db.Timestamptz()

  @@unique([userId, tittle])
}

model cards {
  id Int @id @default(autoincrement())
  userId Int
  tittle String
  cardNumber String
  name String
  securityCode String
  expirationDate String
  password String
  isVirtual Boolean @default(false)
  type cardType
  users users @relation(fields: [userId], references: [id])
  createdAt DateTime? @default(now()) @db.Timestamptz()

  @@unique([userId, tittle])
}

enum cardType {
  credit 
  debit
  credit_debit
}

model wifi {
  id Int @id @default(autoincrement())
  userId Int
  tittle String
  wifiNetwork String
  password String
  users users @relation(fields: [userId], references: [id])
  createdAt DateTime? @default(now()) @db.Timestamptz()
}
